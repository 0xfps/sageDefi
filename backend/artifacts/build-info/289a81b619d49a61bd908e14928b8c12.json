{"id":"289a81b619d49a61bd908e14928b8c12","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Staking.sol":{"content":"// //SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nerror Transfer_Failed();\r\n\r\ncontract Staking is ReentrancyGuard{\r\n    // @dev State Variables\r\n    IERC20 immutable public StakingToken;\r\n    IERC20 immutable public RewardToken;\r\n    address public s_owner;\r\n    uint256 private constant s_rewardRate = 100;\r\n    uint256 private lastUpdatedtime;\r\n    uint256 public s_totalSupply;\r\n    uint256 public s_rewardPerTokenStored;\r\n    mapping (address => uint256) public s_balances;\r\n    mapping (address => uint256) public s_rewards;\r\n    mapping (address => uint256) public s_userRewardPerToken;\r\n\r\n    // @dev Events\r\n    event StakingEvent(uint256 _amount, address indexed user);\r\n    event WithdrawEvent(uint256 _amount, address indexed user);\r\n    event ClaimEvent(uint256 amount, address indexed user);\r\n\r\n    constructor(address _stakingaddress, address _rewardaddress){\r\n        StakingToken = IERC20(_stakingaddress);\r\n        RewardToken = IERC20(_rewardaddress);\r\n        s_owner = msg.sender;\r\n    }\r\n\r\n    //  @dev modifier\r\n    modifier UpdateReward(address account) {\r\n        s_rewardPerTokenStored = rewardPerToken();\r\n        lastUpdatedtime = block.timestamp;\r\n        s_rewards[account] = earned(account);\r\n        s_userRewardPerToken[account] = s_rewardPerTokenStored;\r\n        _;\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256){\r\n        if(s_totalSupply == 0){\r\n            revert Transfer_Failed();\r\n        }\r\n        return s_rewardPerTokenStored + ((( block.timestamp - lastUpdatedtime) * s_rewardRate * 1e18 ) / s_totalSupply);\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256){\r\n        uint256 userBalance = s_balances[account];\r\n        uint256 rewardToken = rewardPerToken();\r\n        uint256 userRewardPerTokenPaid = s_userRewardPerToken[account];\r\n        uint256 rewards =  s_rewards[account];\r\n\r\n        return ((userBalance * (rewardToken - userRewardPerTokenPaid))/ 1e18) + rewards;\r\n\r\n    }\r\n\r\n\r\n    // @dev Stake Function\r\n    // Function shoud be able to add to total supply\r\n    // Add to the user balance\r\n    // transfer to the contract\r\n    // Emit the amount staked and the address\r\n// UpdateReward(msg.sender)\r\n    function Stake(uint256 _amount) external nonReentrant {\r\n        if(_amount == 0){\r\n            revert Transfer_Failed();\r\n        }\r\n        s_totalSupply += _amount;\r\n        s_balances[msg.sender] += _amount;\r\n\r\n        bool success = StakingToken.transferFrom(msg.sender, address(this), _amount);\r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n        emit StakingEvent(_amount, msg.sender);\r\n\r\n    }\r\n\r\n    // @dev Withdraw Function\r\n    // Function should be able to minus from the total supply\r\n    // Minus from the user balance\r\n    // transfer to the user\r\n    // Emit the amount withdrawed and the address\r\n\r\n    function Withdraw(uint _amount) external nonReentrant UpdateReward(msg.sender){\r\n        if(_amount < s_balances[msg.sender]){\r\n            revert Transfer_Failed();\r\n        }\r\n        s_totalSupply -= _amount;\r\n        s_balances[msg.sender] -= _amount;\r\n        bool success = StakingToken.transferFrom(address(this), msg.sender, _amount);\r\n\r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n\r\n        emit WithdrawEvent(_amount, msg.sender);\r\n    }\r\n\r\n\r\n    // @dev Claim Function\r\n    // user reward will go to zero\r\n    // transfer the reward to the user\r\n    // Emit the amount token and the address\r\n\r\n    function Claim() external nonReentrant UpdateReward(msg.sender) {\r\n        uint256 amount = s_rewards[msg.sender];\r\n        s_rewards[msg.sender] = 0;\r\n        bool success = RewardToken.transfer(msg.sender, amount);\r\n        if(!success){\r\n            revert Transfer_Failed();\r\n        }\r\n\r\n        emit ClaimEvent(amount, msg.sender);\r\n        \r\n    }\r\n}"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[53]},"id":54,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":53,"linearizedBaseContracts":[53],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":53,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":53,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":53,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":53,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":53,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":53,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":54,"src":"888:1952:0","usedErrors":[]}],"src":"112:2729:0"},"id":0},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":55,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"131:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":131,"linearizedBaseContracts":[131],"name":"IERC20","nameLocation":"212:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"225:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":65,"name":"Transfer","nameLocation":"394:8:1","nodeType":"EventDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:1","nodeType":"VariableDeclaration","scope":65,"src":"403:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:1","nodeType":"VariableDeclaration","scope":65,"src":"425:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:1","nodeType":"VariableDeclaration","scope":65,"src":"445:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:1"},"src":"388:72:1"},{"anonymous":false,"documentation":{"id":66,"nodeType":"StructuredDocumentation","src":"466:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":74,"name":"Approval","nameLocation":"625:8:1","nodeType":"EventDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:1","nodeType":"VariableDeclaration","scope":74,"src":"634:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:1","nodeType":"VariableDeclaration","scope":74,"src":"657:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:1","nodeType":"VariableDeclaration","scope":74,"src":"682:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:1"},"src":"619:78:1"},{"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"703:66:1","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":131,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"835:72:1","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"account","nameLocation":"939:7:1","nodeType":"VariableDeclaration","scope":88,"src":"931:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":88,"src":"971:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:1"},"scope":131,"src":"912:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"986:202:1","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:1","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"to","nameLocation":"1219:2:1","nodeType":"VariableDeclaration","scope":98,"src":"1211:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"amount","nameLocation":"1231:6:1","nodeType":"VariableDeclaration","scope":98,"src":"1223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":98,"src":"1257:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:1"},"scope":131,"src":"1193:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"1269:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:1","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"owner","nameLocation":"1565:5:1","nodeType":"VariableDeclaration","scope":108,"src":"1557:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"spender","nameLocation":"1580:7:1","nodeType":"VariableDeclaration","scope":108,"src":"1572:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:1"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":108,"src":"1612:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:1"},"scope":131,"src":"1538:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1627:642:1","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":118,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:1","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"spender","nameLocation":"2299:7:1","nodeType":"VariableDeclaration","scope":118,"src":"2291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"amount","nameLocation":"2316:6:1","nodeType":"VariableDeclaration","scope":118,"src":"2308:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:1"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"2342:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":115,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:1"},"scope":131,"src":"2274:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"2354:287:1","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"from","nameLocation":"2685:4:1","nodeType":"VariableDeclaration","scope":130,"src":"2677:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"to","nameLocation":"2707:2:1","nodeType":"VariableDeclaration","scope":130,"src":"2699:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"amount","nameLocation":"2727:6:1","nodeType":"VariableDeclaration","scope":130,"src":"2719:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":130,"src":"2758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":127,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:1"},"scope":131,"src":"2646:118:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":132,"src":"202:2564:1","usedErrors":[]}],"src":"106:2661:1"},"id":1},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"IERC20":[131],"ReentrancyGuard":[53],"Staking":[475],"Transfer_Failed":[137]},"id":476,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"44:23:2"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":476,"sourceUnit":54,"src":"69:62:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":476,"sourceUnit":132,"src":"133:56:2","symbolAliases":[],"unitAlias":""},{"id":137,"name":"Transfer_Failed","nameLocation":"199:15:2","nodeType":"ErrorDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"214:2:2"},"src":"193:24:2"},{"abstract":false,"baseContracts":[{"baseName":{"id":138,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":53,"src":"241:15:2"},"id":139,"nodeType":"InheritanceSpecifier","src":"241:15:2"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":475,"linearizedBaseContracts":[475,53],"name":"Staking","nameLocation":"230:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"be5af966","id":142,"mutability":"immutable","name":"StakingToken","nameLocation":"316:12:2","nodeType":"VariableDeclaration","scope":475,"src":"292:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"},"typeName":{"id":141,"nodeType":"UserDefinedTypeName","pathNode":{"id":140,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"292:6:2"},"referencedDeclaration":131,"src":"292:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"f1e9f1e5","id":145,"mutability":"immutable","name":"RewardToken","nameLocation":"359:11:2","nodeType":"VariableDeclaration","scope":475,"src":"335:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"},"typeName":{"id":144,"nodeType":"UserDefinedTypeName","pathNode":{"id":143,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":131,"src":"335:6:2"},"referencedDeclaration":131,"src":"335:6:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"e3978240","id":147,"mutability":"mutable","name":"s_owner","nameLocation":"392:7:2","nodeType":"VariableDeclaration","scope":475,"src":"377:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"377:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"id":150,"mutability":"constant","name":"s_rewardRate","nameLocation":"431:12:2","nodeType":"VariableDeclaration","scope":475,"src":"406:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"446:3:2","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"private"},{"constant":false,"id":152,"mutability":"mutable","name":"lastUpdatedtime","nameLocation":"472:15:2","nodeType":"VariableDeclaration","scope":475,"src":"456:31:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":151,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"6a74a0fc","id":154,"mutability":"mutable","name":"s_totalSupply","nameLocation":"509:13:2","nodeType":"VariableDeclaration","scope":475,"src":"494:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"304ac91b","id":156,"mutability":"mutable","name":"s_rewardPerTokenStored","nameLocation":"544:22:2","nodeType":"VariableDeclaration","scope":475,"src":"529:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ab32eb69","id":160,"mutability":"mutable","name":"s_balances","nameLocation":"609:10:2","nodeType":"VariableDeclaration","scope":475,"src":"573:46:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":159,"keyType":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"573:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"bea08151","id":164,"mutability":"mutable","name":"s_rewards","nameLocation":"662:9:2","nodeType":"VariableDeclaration","scope":475,"src":"626:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":163,"keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"626:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"21e82efa","id":168,"mutability":"mutable","name":"s_userRewardPerToken","nameLocation":"714:20:2","nodeType":"VariableDeclaration","scope":475,"src":"678:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":167,"keyType":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"678:28:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":174,"name":"StakingEvent","nameLocation":"769:12:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"790:7:2","nodeType":"VariableDeclaration","scope":174,"src":"782:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"782:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"815:4:2","nodeType":"VariableDeclaration","scope":174,"src":"799:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"781:39:2"},"src":"763:58:2"},{"anonymous":false,"id":180,"name":"WithdrawEvent","nameLocation":"833:13:2","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"_amount","nameLocation":"855:7:2","nodeType":"VariableDeclaration","scope":180,"src":"847:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"880:4:2","nodeType":"VariableDeclaration","scope":180,"src":"864:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"864:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"846:39:2"},"src":"827:59:2"},{"anonymous":false,"id":186,"name":"ClaimEvent","nameLocation":"898:10:2","nodeType":"EventDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"917:6:2","nodeType":"VariableDeclaration","scope":186,"src":"909:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":184,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"941:4:2","nodeType":"VariableDeclaration","scope":186,"src":"925:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"908:38:2"},"src":"892:55:2"},{"body":{"id":210,"nodeType":"Block","src":"1015:135:2","statements":[{"expression":{"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"1026:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":195,"name":"_stakingaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1048:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":194,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1041:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$131_$","typeString":"type(contract IERC20)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1041:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"src":"1026:38:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":198,"nodeType":"ExpressionStatement","src":"1026:38:2"},{"expression":{"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":199,"name":"RewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"1075:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":201,"name":"_rewardaddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1096:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":200,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1089:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$131_$","typeString":"type(contract IERC20)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1089:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"src":"1075:36:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":204,"nodeType":"ExpressionStatement","src":"1075:36:2"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":205,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"1122:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1132:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1132:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1122:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":209,"nodeType":"ExpressionStatement","src":"1122:20:2"}]},"id":211,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"_stakingaddress","nameLocation":"975:15:2","nodeType":"VariableDeclaration","scope":211,"src":"967:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"_rewardaddress","nameLocation":"1000:14:2","nodeType":"VariableDeclaration","scope":211,"src":"992:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"992:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:49:2"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"1015:0:2"},"scope":475,"src":"955:195:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":240,"nodeType":"Block","src":"1220:228:2","statements":[{"expression":{"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":215,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1231:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"1256:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1256:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1231:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":219,"nodeType":"ExpressionStatement","src":"1231:41:2"},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":220,"name":"lastUpdatedtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1283:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":221,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1301:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1301:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1283:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"1283:33:2"},{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":225,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1327:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":227,"indexExpression":{"id":226,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1337:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1327:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1355:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"earned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1348:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1348:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1327:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"1327:36:2"},{"expression":{"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":233,"name":"s_userRewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1374:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":235,"indexExpression":{"id":234,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1395:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1374:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":236,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1406:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1374:54:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":238,"nodeType":"ExpressionStatement","src":"1374:54:2"},{"id":239,"nodeType":"PlaceholderStatement","src":"1439:1:2"}]},"id":241,"name":"UpdateReward","nameLocation":"1190:12:2","nodeType":"ModifierDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"account","nameLocation":"1211:7:2","nodeType":"VariableDeclaration","scope":241,"src":"1203:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1202:17:2"},"src":"1181:267:2","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"1511:213:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1525:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1542:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1525:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":253,"nodeType":"IfStatement","src":"1522:73:2","trueBody":{"id":252,"nodeType":"Block","src":"1544:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"1566:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1566:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"RevertStatement","src":"1559:24:2"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"s_rewardPerTokenStored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"1612:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1641:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1641:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":257,"name":"lastUpdatedtime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"1659:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1641:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1639:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":260,"name":"s_rewardRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"1678:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1639:51:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1693:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1639:58:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:61:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":265,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"1702:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1638:77:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1637:79:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1612:104:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":245,"id":269,"nodeType":"Return","src":"1605:111:2"}]},"functionSelector":"cd3daf9d","id":271,"implemented":true,"kind":"function","modifiers":[],"name":"rewardPerToken","nameLocation":"1465:14:2","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1479:2:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":271,"src":"1503:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1502:9:2"},"scope":475,"src":"1456:268:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":314,"nodeType":"Block","src":"1794:324:2","statements":[{"assignments":[279],"declarations":[{"constant":false,"id":279,"mutability":"mutable","name":"userBalance","nameLocation":"1813:11:2","nodeType":"VariableDeclaration","scope":314,"src":"1805:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1805:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":283,"initialValue":{"baseExpression":{"id":280,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1827:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":282,"indexExpression":{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1838:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1827:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1805:41:2"},{"assignments":[285],"declarations":[{"constant":false,"id":285,"mutability":"mutable","name":"rewardToken","nameLocation":"1865:11:2","nodeType":"VariableDeclaration","scope":314,"src":"1857:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":288,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":286,"name":"rewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"1879:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1879:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1857:38:2"},{"assignments":[290],"declarations":[{"constant":false,"id":290,"mutability":"mutable","name":"userRewardPerTokenPaid","nameLocation":"1914:22:2","nodeType":"VariableDeclaration","scope":314,"src":"1906:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1906:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":294,"initialValue":{"baseExpression":{"id":291,"name":"s_userRewardPerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1939:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":293,"indexExpression":{"id":292,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1960:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1939:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1906:62:2"},{"assignments":[296],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"rewards","nameLocation":"1987:7:2","nodeType":"VariableDeclaration","scope":314,"src":"1979:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1979:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":300,"initialValue":{"baseExpression":{"id":297,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1998:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":299,"indexExpression":{"id":298,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1998:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1979:37:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":301,"name":"userBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"2038:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":302,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"2053:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":303,"name":"userRewardPerTokenPaid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2067:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2053:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2052:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2038:52:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2037:54:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2093:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2037:60:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2036:62:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":311,"name":"rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2036:72:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":277,"id":313,"nodeType":"Return","src":"2029:79:2"}]},"functionSelector":"008cc262","id":315,"implemented":true,"kind":"function","modifiers":[],"name":"earned","nameLocation":"1741:6:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"account","nameLocation":"1756:7:2","nodeType":"VariableDeclaration","scope":315,"src":"1748:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:17:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"1786:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1785:9:2"},"scope":475,"src":"1732:386:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":367,"nodeType":"Block","src":"2405:377:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2430:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2419:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":329,"nodeType":"IfStatement","src":"2416:67:2","trueBody":{"id":328,"nodeType":"Block","src":"2432:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":325,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2454:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2454:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"RevertStatement","src":"2447:24:2"}]}},{"expression":{"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":330,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2493:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":331,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2510:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":333,"nodeType":"ExpressionStatement","src":"2493:24:2"},{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":334,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2528:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":337,"indexExpression":{"expression":{"id":335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2539:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2539:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2528:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":338,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2554:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"2528:33:2"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"success","nameLocation":"2579:7:2","nodeType":"VariableDeclaration","scope":367,"src":"2574:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":341,"name":"bool","nodeType":"ElementaryTypeName","src":"2574:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":353,"initialValue":{"arguments":[{"expression":{"id":345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2615:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2615:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":349,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2635:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$475","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$475","typeString":"contract Staking"}],"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2627:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:2","typeDescriptions":{}}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2627:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2642:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":343,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"2589:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":130,"src":"2589:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2574:76:2"},{"condition":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2664:8:2","subExpression":{"id":354,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2665:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":360,"nodeType":"IfStatement","src":"2661:63:2","trueBody":{"id":359,"nodeType":"Block","src":"2673:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"2695:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2695:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"RevertStatement","src":"2688:24:2"}]}},{"eventCall":{"arguments":[{"id":362,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2761:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2761:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":361,"name":"StakingEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2739:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2739:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"EmitStatement","src":"2734:38:2"}]},"functionSelector":"227a473b","id":368,"implemented":true,"kind":"function","modifiers":[{"id":320,"kind":"modifierInvocation","modifierName":{"id":319,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"2392:12:2"},"nodeType":"ModifierInvocation","src":"2392:12:2"}],"name":"Stake","nameLocation":"2360:5:2","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"_amount","nameLocation":"2374:7:2","nodeType":"VariableDeclaration","scope":368,"src":"2366:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2365:17:2"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"2405:0:2"},"scope":475,"src":"2351:431:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":427,"nodeType":"Block","src":"3080:398:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":379,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":380,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3104:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":383,"indexExpression":{"expression":{"id":381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3115:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3115:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3104:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3094:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":389,"nodeType":"IfStatement","src":"3091:87:2","trueBody":{"id":388,"nodeType":"Block","src":"3127:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":385,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3149:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3149:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"RevertStatement","src":"3142:24:2"}]}},{"expression":{"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":390,"name":"s_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"3188:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":391,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3205:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3188:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":393,"nodeType":"ExpressionStatement","src":"3188:24:2"},{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":394,"name":"s_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3223:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":397,"indexExpression":{"expression":{"id":395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3234:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3223:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":398,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3249:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3223:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"3223:33:2"},{"assignments":[402],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"success","nameLocation":"3272:7:2","nodeType":"VariableDeclaration","scope":427,"src":"3267:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"3267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":413,"initialValue":{"arguments":[{"arguments":[{"id":407,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3316:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$475","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$475","typeString":"contract Staking"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3308:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:2","typeDescriptions":{}}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":409,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3323:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3323:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":411,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":403,"name":"StakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3282:12:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":130,"src":"3282:25:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3282:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3267:76:2"},{"condition":{"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3359:8:2","subExpression":{"id":414,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3360:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":420,"nodeType":"IfStatement","src":"3356:63:2","trueBody":{"id":419,"nodeType":"Block","src":"3368:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":416,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3390:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3390:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"RevertStatement","src":"3383:24:2"}]}},{"eventCall":{"arguments":[{"id":422,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"3450:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3459:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3459:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":421,"name":"WithdrawEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"3436:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3436:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":426,"nodeType":"EmitStatement","src":"3431:39:2"}]},"functionSelector":"5b6b431d","id":428,"implemented":true,"kind":"function","modifiers":[{"id":373,"kind":"modifierInvocation","modifierName":{"id":372,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3043:12:2"},"nodeType":"ModifierInvocation","src":"3043:12:2"},{"arguments":[{"expression":{"id":375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3069:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3069:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":377,"kind":"modifierInvocation","modifierName":{"id":374,"name":"UpdateReward","nodeType":"IdentifierPath","referencedDeclaration":241,"src":"3056:12:2"},"nodeType":"ModifierInvocation","src":"3056:24:2"}],"name":"Withdraw","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_amount","nameLocation":"3025:7:2","nodeType":"VariableDeclaration","scope":428,"src":"3020:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint","nodeType":"ElementaryTypeName","src":"3020:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3019:14:2"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"3080:0:2"},"scope":475,"src":"3002:476:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":473,"nodeType":"Block","src":"3704:290:2","statements":[{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"amount","nameLocation":"3723:6:2","nodeType":"VariableDeclaration","scope":473,"src":"3715:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":443,"initialValue":{"baseExpression":{"id":439,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3732:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":442,"indexExpression":{"expression":{"id":440,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3742:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3742:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3715:38:2"},{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":444,"name":"s_rewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3764:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":447,"indexExpression":{"expression":{"id":445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3774:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3774:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3764:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3788:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3764:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":450,"nodeType":"ExpressionStatement","src":"3764:25:2"},{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"success","nameLocation":"3805:7:2","nodeType":"VariableDeclaration","scope":473,"src":"3800:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"3800:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":459,"initialValue":{"arguments":[{"expression":{"id":455,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3836:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3836:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":457,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3848:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":453,"name":"RewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"3815:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$131","typeString":"contract IERC20"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":98,"src":"3815:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3815:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3800:55:2"},{"condition":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3869:8:2","subExpression":{"id":460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3870:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":466,"nodeType":"IfStatement","src":"3866:63:2","trueBody":{"id":465,"nodeType":"Block","src":"3878:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"Transfer_Failed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"3900:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3900:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":464,"nodeType":"RevertStatement","src":"3893:24:2"}]}},{"eventCall":{"arguments":[{"id":468,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3957:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":469,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3965:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3965:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":467,"name":"ClaimEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3946:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3946:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"EmitStatement","src":"3941:35:2"}]},"functionSelector":"3158952e","id":474,"implemented":true,"kind":"function","modifiers":[{"id":431,"kind":"modifierInvocation","modifierName":{"id":430,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"3666:12:2"},"nodeType":"ModifierInvocation","src":"3666:12:2"},{"arguments":[{"expression":{"id":433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3692:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3692:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":435,"kind":"modifierInvocation","modifierName":{"id":432,"name":"UpdateReward","nodeType":"IdentifierPath","referencedDeclaration":241,"src":"3679:12:2"},"nodeType":"ModifierInvocation","src":"3679:24:2"}],"name":"Claim","nameLocation":"3649:5:2","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"3654:2:2"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"3704:0:2"},"scope":475,"src":"3640:354:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":476,"src":"221:3776:2","usedErrors":[137]}],"src":"44:3953:2"},"id":2}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Staking.sol":{"Staking":{"abi":[{"inputs":[{"internalType":"address","name":"_stakingaddress","type":"address"},{"internalType":"address","name":"_rewardaddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Transfer_Failed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ClaimEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"StakingEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"WithdrawEvent","type":"event"},{"inputs":[],"name":"Claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"RewardToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"StakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_userRewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0},"@_211":{"entryPoint":null,"id":211,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":346,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":277,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":245,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":240,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":297,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1355:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"759:80:3","statements":[{"nodeType":"YulAssignment","src":"769:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:3"},"nodeType":"YulFunctionCall","src":"778:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:3"},"nodeType":"YulFunctionCall","src":"800:33:3"},"nodeType":"YulExpressionStatement","src":"800:33:3"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:3","type":""}],"src":"696:143:3"},{"body":{"nodeType":"YulBlock","src":"939:413:3","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:3"},"nodeType":"YulFunctionCall","src":"987:79:3"},"nodeType":"YulExpressionStatement","src":"987:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:3"},"nodeType":"YulFunctionCall","src":"956:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:3"},"nodeType":"YulFunctionCall","src":"952:32:3"},"nodeType":"YulIf","src":"949:119:3"},{"nodeType":"YulBlock","src":"1078:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:3"},"nodeType":"YulFunctionCall","src":"1164:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:3"},"nodeType":"YulFunctionCall","src":"1132:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:3"}]}]},{"nodeType":"YulBlock","src":"1216:129:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:3"},"nodeType":"YulFunctionCall","src":"1303:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:3"},"nodeType":"YulFunctionCall","src":"1271:64:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:3","type":""}],"src":"845:507:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b506040516200131f3803806200131f83398181016040528101906200003791906200015a565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a1565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200012282620000f5565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b60008060408385031215620001745762000173620000f0565b5b6000620001848582860162000143565b9250506020620001978582860162000143565b9150509250929050565b60805160a051611143620001dc600039600081816106f30152610c1b015260008181610470015281816109ce0152610b2f01526111436000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636a74a0fc1161008c578063bea0815111610066578063bea08151146101ff578063cd3daf9d1461022f578063e39782401461024d578063f1e9f1e51461026b576100ce565b80636a74a0fc14610193578063ab32eb69146101b1578063be5af966146101e1576100ce565b80628cc262146100d357806321e82efa14610103578063227a473b14610133578063304ac91b1461014f5780633158952e1461016d5780635b6b431d14610177575b600080fd5b6100ed60048036038101906100e89190610cfa565b610289565b6040516100fa9190610d40565b60405180910390f35b61011d60048036038101906101189190610cfa565b6103a2565b60405161012a9190610d40565b60405180910390f35b61014d60048036038101906101489190610d87565b6103ba565b005b6101576105b0565b6040516101649190610d40565b60405180910390f35b6101756105b6565b005b610191600480360381019061018c9190610d87565b610832565b005b61019b610b0f565b6040516101a89190610d40565b60405180910390f35b6101cb60048036038101906101c69190610cfa565b610b15565b6040516101d89190610d40565b60405180910390f35b6101e9610b2d565b6040516101f69190610e13565b60405180910390f35b61021960048036038101906102149190610cfa565b610b51565b6040516102269190610d40565b60405180910390f35b610237610b69565b6040516102449190610d40565b60405180910390f35b610255610bf3565b6040516102629190610e3d565b60405180910390f35b610273610c19565b6040516102809190610e13565b60405180910390f35b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006102d8610b69565b90506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080670de0b6b3a764000083856103789190610e87565b866103839190610ebb565b61038d9190610f44565b6103979190610f75565b945050505050919050565b60076020528060005260406000206000915090505481565b6103c2610c3d565b60008114156103fd576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003600082825461040f9190610f75565b9250508190555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104659190610f75565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104cb93929190610fcb565b602060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d919061103a565b905080610556576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9eddc895a7fcc0f3c43a5ec13c076918147735dc833efd2b36be61b49960ae288360405161059c9190610d40565b60405180910390a2506105ad610c8d565b50565b60045481565b6105be610c3d565b336105c7610b69565b600481905550426002819055506105dd81610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161074c929190611067565b602060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e919061103a565b9050806107d7576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8ef124458f6feaffa36635fcaa512e69bb8539878544e2fad3115da59145b4fc8360405161081d9190610d40565b60405180910390a2505050610830610c8d565b565b61083a610c3d565b33610843610b69565b6004819055504260028190555061085981610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482101561095b576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816003600082825461096d9190610e87565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c39190610e87565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b8152600401610a2993929190610fcb565b602060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b919061103a565b905080610ab4576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f601cfd9096521c3ad4102493abe73cd7278ce7b82d41f1d65e1c25c1fb56197884604051610afa9190610d40565b60405180910390a25050610b0c610c8d565b50565b60035481565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6000806003541415610ba7576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600354670de0b6b3a7640000606460025442610bc39190610e87565b610bcd9190610ebb565b610bd79190610ebb565b610be19190610f44565b600454610bee9190610f75565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000541415610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a906110ed565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc782610c9c565b9050919050565b610cd781610cbc565b8114610ce257600080fd5b50565b600081359050610cf481610cce565b92915050565b600060208284031215610d1057610d0f610c97565b5b6000610d1e84828501610ce5565b91505092915050565b6000819050919050565b610d3a81610d27565b82525050565b6000602082019050610d556000830184610d31565b92915050565b610d6481610d27565b8114610d6f57600080fd5b50565b600081359050610d8181610d5b565b92915050565b600060208284031215610d9d57610d9c610c97565b5b6000610dab84828501610d72565b91505092915050565b6000819050919050565b6000610dd9610dd4610dcf84610c9c565b610db4565b610c9c565b9050919050565b6000610deb82610dbe565b9050919050565b6000610dfd82610de0565b9050919050565b610e0d81610df2565b82525050565b6000602082019050610e286000830184610e04565b92915050565b610e3781610cbc565b82525050565b6000602082019050610e526000830184610e2e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9282610d27565b9150610e9d83610d27565b925082821015610eb057610eaf610e58565b5b828203905092915050565b6000610ec682610d27565b9150610ed183610d27565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0a57610f09610e58565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4f82610d27565b9150610f5a83610d27565b925082610f6a57610f69610f15565b5b828204905092915050565b6000610f8082610d27565b9150610f8b83610d27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc057610fbf610e58565b5b828201905092915050565b6000606082019050610fe06000830186610e2e565b610fed6020830185610e2e565b610ffa6040830184610d31565b949350505050565b60008115159050919050565b61101781611002565b811461102257600080fd5b50565b6000815190506110348161100e565b92915050565b6000602082840312156110505761104f610c97565b5b600061105e84828501611025565b91505092915050565b600060408201905061107c6000830185610e2e565b6110896020830184610d31565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110d7601f83611090565b91506110e2826110a1565b602082019050919050565b60006020820190508181036000830152611106816110ca565b905091905056fea26469706673582212204b9aa5cf9795c9c2ee469840866f6e9ce696ce3cc8ece3e12ec5c96bed4f3ac064736f6c63430008090033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x131F CODESIZE SUB DUP1 PUSH3 0x131F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1A1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x122 DUP3 PUSH3 0xF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x134 DUP2 PUSH3 0x115 JUMP JUMPDEST DUP2 EQ PUSH3 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x154 DUP2 PUSH3 0x129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x174 JUMPI PUSH3 0x173 PUSH3 0xF0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x184 DUP6 DUP3 DUP7 ADD PUSH3 0x143 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x197 DUP6 DUP3 DUP7 ADD PUSH3 0x143 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1143 PUSH3 0x1DC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6F3 ADD MSTORE PUSH2 0xC1B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x470 ADD MSTORE DUP2 DUP2 PUSH2 0x9CE ADD MSTORE PUSH2 0xB2F ADD MSTORE PUSH2 0x1143 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A74A0FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE3978240 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF1E9F1E5 EQ PUSH2 0x26B JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x6A74A0FC EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE5AF966 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x21E82EFA EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3158952E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x5B6B431D EQ PUSH2 0x177 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2D8 PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 DUP6 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST DUP7 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9EDDC895A7FCC0F3C43A5EC13C076918147735DC833EFD2B36BE61B49960AE28 DUP4 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5AD PUSH2 0xC8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5BE PUSH2 0xC3D JUMP JUMPDEST CALLER PUSH2 0x5C7 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x5DD DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP3 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EF124458F6FEAFFA36635FCAA512E69BB8539878544E2FAD3115DA59145B4FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x830 PUSH2 0xC8D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x83A PUSH2 0xC3D JUMP JUMPDEST CALLER PUSH2 0x843 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x859 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT ISZERO PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x601CFD9096521C3AD4102493ABE73CD7278CE7B82D41F1D65E1C25C1FB561978 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xB0C PUSH2 0xC8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7A SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP3 PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF4 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3A DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP2 EQ PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD81 DUP2 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP5 DUP3 DUP6 ADD PUSH2 0xD72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 PUSH2 0xDD4 PUSH2 0xDCF DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP3 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFD DUP3 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xDF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE28 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC6 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xED1 DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4F DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xF5A DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8B DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xFED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xFFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0x1002 JUMP JUMPDEST DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP5 DUP3 DUP6 ADD PUSH2 0x1025 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x107C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x1089 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D7 PUSH1 0x1F DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SWAP11 0xA5 0xCF SWAP8 SWAP6 0xC9 0xC2 0xEE CHAINID SWAP9 BLOCKHASH DUP7 PUSH16 0x6E9CE696CE3CC8ECE3E12EC5C96BED4F GASPRICE 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"221:3776:2:-:0;;;955:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;1048:15:2;1026:38;;;;;;;;;;1096:14;1075:36;;;;;;;;;;1132:10;1122:7;;:20;;;;;;;;;;;;;;;;;;955:195;;221:3776;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;221:3776:2:-;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@Claim_474":{"entryPoint":1462,"id":474,"parameterSlots":0,"returnSlots":0},"@RewardToken_145":{"entryPoint":3097,"id":145,"parameterSlots":0,"returnSlots":0},"@Stake_368":{"entryPoint":954,"id":368,"parameterSlots":1,"returnSlots":0},"@StakingToken_142":{"entryPoint":2861,"id":142,"parameterSlots":0,"returnSlots":0},"@Withdraw_428":{"entryPoint":2098,"id":428,"parameterSlots":1,"returnSlots":0},"@_nonReentrantAfter_52":{"entryPoint":3213,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":3133,"id":44,"parameterSlots":0,"returnSlots":0},"@earned_315":{"entryPoint":649,"id":315,"parameterSlots":1,"returnSlots":1},"@rewardPerToken_271":{"entryPoint":2921,"id":271,"parameterSlots":0,"returnSlots":1},"@s_balances_160":{"entryPoint":2837,"id":160,"parameterSlots":0,"returnSlots":0},"@s_owner_147":{"entryPoint":3059,"id":147,"parameterSlots":0,"returnSlots":0},"@s_rewardPerTokenStored_156":{"entryPoint":1456,"id":156,"parameterSlots":0,"returnSlots":0},"@s_rewards_164":{"entryPoint":2897,"id":164,"parameterSlots":0,"returnSlots":0},"@s_totalSupply_154":{"entryPoint":2831,"id":154,"parameterSlots":0,"returnSlots":0},"@s_userRewardPerToken_168":{"entryPoint":930,"id":168,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":3301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":4133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3463,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3630,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack":{"entryPoint":3588,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":4298,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3377,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":4043,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":4199,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed":{"entryPoint":3603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4333,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3392,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4240,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3957,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3908,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3771,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3719,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3260,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4098,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3228,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3367,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$131_to_t_address":{"entryPoint":3570,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3552,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3518,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":3508,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3672,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3861,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3223,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":4257,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3278,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3419,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7563:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"748:87:3","statements":[{"nodeType":"YulAssignment","src":"758:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:3"},"nodeType":"YulFunctionCall","src":"767:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:3"},"nodeType":"YulFunctionCall","src":"796:33:3"},"nodeType":"YulExpressionStatement","src":"796:33:3"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:3","type":""}],"src":"696:139:3"},{"body":{"nodeType":"YulBlock","src":"907:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:3"},"nodeType":"YulFunctionCall","src":"955:79:3"},"nodeType":"YulExpressionStatement","src":"955:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:3"},"nodeType":"YulFunctionCall","src":"924:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:3"},"nodeType":"YulFunctionCall","src":"920:32:3"},"nodeType":"YulIf","src":"917:119:3"},{"nodeType":"YulBlock","src":"1046:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:3","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:3"},"nodeType":"YulFunctionCall","src":"1121:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:3"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:3"},"nodeType":"YulFunctionCall","src":"1100:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:3"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:3","type":""}],"src":"841:329:3"},{"body":{"nodeType":"YulBlock","src":"1221:32:3","statements":[{"nodeType":"YulAssignment","src":"1231:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:3","type":""}],"src":"1176:77:3"},{"body":{"nodeType":"YulBlock","src":"1324:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1346:17:3"},"nodeType":"YulFunctionCall","src":"1346:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:3"},"nodeType":"YulFunctionCall","src":"1334:37:3"},"nodeType":"YulExpressionStatement","src":"1334:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:3","type":""}],"src":"1259:118:3"},{"body":{"nodeType":"YulBlock","src":"1481:124:3","statements":[{"nodeType":"YulAssignment","src":"1491:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:3"},"nodeType":"YulFunctionCall","src":"1499:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:3"},"nodeType":"YulFunctionCall","src":"1580:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1527:43:3"},"nodeType":"YulFunctionCall","src":"1527:71:3"},"nodeType":"YulExpressionStatement","src":"1527:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:3","type":""}],"src":"1383:222:3"},{"body":{"nodeType":"YulBlock","src":"1654:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:3"},"nodeType":"YulFunctionCall","src":"1713:12:3"},"nodeType":"YulExpressionStatement","src":"1713:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1684:17:3"},"nodeType":"YulFunctionCall","src":"1684:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:3"},"nodeType":"YulFunctionCall","src":"1674:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:3"},"nodeType":"YulFunctionCall","src":"1667:43:3"},"nodeType":"YulIf","src":"1664:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:3","type":""}],"src":"1611:122:3"},{"body":{"nodeType":"YulBlock","src":"1791:87:3","statements":[{"nodeType":"YulAssignment","src":"1801:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:3"},"nodeType":"YulFunctionCall","src":"1810:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1839:26:3"},"nodeType":"YulFunctionCall","src":"1839:33:3"},"nodeType":"YulExpressionStatement","src":"1839:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:3","type":""}],"src":"1739:139:3"},{"body":{"nodeType":"YulBlock","src":"1950:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"1996:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1998:77:3"},"nodeType":"YulFunctionCall","src":"1998:79:3"},"nodeType":"YulExpressionStatement","src":"1998:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1971:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1967:3:3"},"nodeType":"YulFunctionCall","src":"1967:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1992:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1963:3:3"},"nodeType":"YulFunctionCall","src":"1963:32:3"},"nodeType":"YulIf","src":"1960:119:3"},{"nodeType":"YulBlock","src":"2089:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2104:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2118:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2108:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2133:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:3"},"nodeType":"YulFunctionCall","src":"2164:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2188:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2143:20:3"},"nodeType":"YulFunctionCall","src":"2143:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2133:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1920:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1931:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1943:6:3","type":""}],"src":"1884:329:3"},{"body":{"nodeType":"YulBlock","src":"2251:28:3","statements":[{"nodeType":"YulAssignment","src":"2261:12:3","value":{"name":"value","nodeType":"YulIdentifier","src":"2268:5:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2261:3:3"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2237:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2247:3:3","type":""}],"src":"2219:60:3"},{"body":{"nodeType":"YulBlock","src":"2345:82:3","statements":[{"nodeType":"YulAssignment","src":"2355:66:3","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2413:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2395:17:3"},"nodeType":"YulFunctionCall","src":"2395:24:3"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2386:8:3"},"nodeType":"YulFunctionCall","src":"2386:34:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2368:17:3"},"nodeType":"YulFunctionCall","src":"2368:53:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2355:9:3"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2325:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2335:9:3","type":""}],"src":"2285:142:3"},{"body":{"nodeType":"YulBlock","src":"2493:66:3","statements":[{"nodeType":"YulAssignment","src":"2503:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2547:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"2516:30:3"},"nodeType":"YulFunctionCall","src":"2516:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2503:9:3"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2473:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2483:9:3","type":""}],"src":"2433:126:3"},{"body":{"nodeType":"YulBlock","src":"2639:66:3","statements":[{"nodeType":"YulAssignment","src":"2649:50:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2693:5:3"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"2662:30:3"},"nodeType":"YulFunctionCall","src":"2662:37:3"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2649:9:3"}]}]},"name":"convert_t_contract$_IERC20_$131_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2619:5:3","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2629:9:3","type":""}],"src":"2565:140:3"},{"body":{"nodeType":"YulBlock","src":"2790:80:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2857:5:3"}],"functionName":{"name":"convert_t_contract$_IERC20_$131_to_t_address","nodeType":"YulIdentifier","src":"2812:44:3"},"nodeType":"YulFunctionCall","src":"2812:51:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2800:6:3"},"nodeType":"YulFunctionCall","src":"2800:64:3"},"nodeType":"YulExpressionStatement","src":"2800:64:3"}]},"name":"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2778:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2785:3:3","type":""}],"src":"2711:159:3"},{"body":{"nodeType":"YulBlock","src":"2988:138:3","statements":[{"nodeType":"YulAssignment","src":"2998:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3010:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3021:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3006:3:3"},"nodeType":"YulFunctionCall","src":"3006:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2998:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3092:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3116:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:3"},"nodeType":"YulFunctionCall","src":"3101:17:3"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3034:57:3"},"nodeType":"YulFunctionCall","src":"3034:85:3"},"nodeType":"YulExpressionStatement","src":"3034:85:3"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2960:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2972:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2983:4:3","type":""}],"src":"2876:250:3"},{"body":{"nodeType":"YulBlock","src":"3197:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3214:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3237:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3219:17:3"},"nodeType":"YulFunctionCall","src":"3219:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3207:6:3"},"nodeType":"YulFunctionCall","src":"3207:37:3"},"nodeType":"YulExpressionStatement","src":"3207:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3185:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3192:3:3","type":""}],"src":"3132:118:3"},{"body":{"nodeType":"YulBlock","src":"3354:124:3","statements":[{"nodeType":"YulAssignment","src":"3364:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3376:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3387:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3372:3:3"},"nodeType":"YulFunctionCall","src":"3372:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3364:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3444:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3457:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3468:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3453:3:3"},"nodeType":"YulFunctionCall","src":"3453:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"3400:43:3"},"nodeType":"YulFunctionCall","src":"3400:71:3"},"nodeType":"YulExpressionStatement","src":"3400:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3326:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3338:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3349:4:3","type":""}],"src":"3256:222:3"},{"body":{"nodeType":"YulBlock","src":"3512:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3529:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3532:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3522:6:3"},"nodeType":"YulFunctionCall","src":"3522:88:3"},"nodeType":"YulExpressionStatement","src":"3522:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3626:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3629:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3619:6:3"},"nodeType":"YulFunctionCall","src":"3619:15:3"},"nodeType":"YulExpressionStatement","src":"3619:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3650:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3653:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3643:6:3"},"nodeType":"YulFunctionCall","src":"3643:15:3"},"nodeType":"YulExpressionStatement","src":"3643:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3484:180:3"},{"body":{"nodeType":"YulBlock","src":"3715:146:3","statements":[{"nodeType":"YulAssignment","src":"3725:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3748:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3730:17:3"},"nodeType":"YulFunctionCall","src":"3730:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3725:1:3"}]},{"nodeType":"YulAssignment","src":"3759:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3782:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3764:17:3"},"nodeType":"YulFunctionCall","src":"3764:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3759:1:3"}]},{"body":{"nodeType":"YulBlock","src":"3806:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3808:16:3"},"nodeType":"YulFunctionCall","src":"3808:18:3"},"nodeType":"YulExpressionStatement","src":"3808:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3800:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3803:1:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3797:2:3"},"nodeType":"YulFunctionCall","src":"3797:8:3"},"nodeType":"YulIf","src":"3794:34:3"},{"nodeType":"YulAssignment","src":"3838:17:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3850:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"3853:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3846:3:3"},"nodeType":"YulFunctionCall","src":"3846:9:3"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"3838:4:3"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3701:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3704:1:3","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"3710:4:3","type":""}],"src":"3670:191:3"},{"body":{"nodeType":"YulBlock","src":"3915:300:3","statements":[{"nodeType":"YulAssignment","src":"3925:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3948:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3930:17:3"},"nodeType":"YulFunctionCall","src":"3930:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"3925:1:3"}]},{"nodeType":"YulAssignment","src":"3959:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3982:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3964:17:3"},"nodeType":"YulFunctionCall","src":"3964:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"3959:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4157:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4159:16:3"},"nodeType":"YulFunctionCall","src":"4159:18:3"},"nodeType":"YulExpressionStatement","src":"4159:18:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4069:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4062:6:3"},"nodeType":"YulFunctionCall","src":"4062:9:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4055:6:3"},"nodeType":"YulFunctionCall","src":"4055:17:3"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4077:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4084:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"4152:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4080:3:3"},"nodeType":"YulFunctionCall","src":"4080:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4074:2:3"},"nodeType":"YulFunctionCall","src":"4074:81:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4051:3:3"},"nodeType":"YulFunctionCall","src":"4051:105:3"},"nodeType":"YulIf","src":"4048:131:3"},{"nodeType":"YulAssignment","src":"4189:20:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4204:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4207:1:3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4200:3:3"},"nodeType":"YulFunctionCall","src":"4200:9:3"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4189:7:3"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3898:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"3901:1:3","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"3907:7:3","type":""}],"src":"3867:348:3"},{"body":{"nodeType":"YulBlock","src":"4249:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4269:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4259:6:3"},"nodeType":"YulFunctionCall","src":"4259:88:3"},"nodeType":"YulExpressionStatement","src":"4259:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4363:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4366:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4356:6:3"},"nodeType":"YulFunctionCall","src":"4356:15:3"},"nodeType":"YulExpressionStatement","src":"4356:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4387:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4390:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4380:6:3"},"nodeType":"YulFunctionCall","src":"4380:15:3"},"nodeType":"YulExpressionStatement","src":"4380:15:3"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"4221:180:3"},{"body":{"nodeType":"YulBlock","src":"4449:143:3","statements":[{"nodeType":"YulAssignment","src":"4459:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4482:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4464:17:3"},"nodeType":"YulFunctionCall","src":"4464:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4459:1:3"}]},{"nodeType":"YulAssignment","src":"4493:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4516:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4498:17:3"},"nodeType":"YulFunctionCall","src":"4498:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4493:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4540:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"4542:16:3"},"nodeType":"YulFunctionCall","src":"4542:18:3"},"nodeType":"YulExpressionStatement","src":"4542:18:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4537:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4530:6:3"},"nodeType":"YulFunctionCall","src":"4530:9:3"},"nodeType":"YulIf","src":"4527:35:3"},{"nodeType":"YulAssignment","src":"4572:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4581:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4584:1:3"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4577:3:3"},"nodeType":"YulFunctionCall","src":"4577:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4572:1:3"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4438:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"4441:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4447:1:3","type":""}],"src":"4407:185:3"},{"body":{"nodeType":"YulBlock","src":"4642:261:3","statements":[{"nodeType":"YulAssignment","src":"4652:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4675:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4657:17:3"},"nodeType":"YulFunctionCall","src":"4657:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4652:1:3"}]},{"nodeType":"YulAssignment","src":"4686:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4709:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4691:17:3"},"nodeType":"YulFunctionCall","src":"4691:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4686:1:3"}]},{"body":{"nodeType":"YulBlock","src":"4849:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4851:16:3"},"nodeType":"YulFunctionCall","src":"4851:18:3"},"nodeType":"YulExpressionStatement","src":"4851:18:3"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4770:1:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4777:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"4845:1:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4773:3:3"},"nodeType":"YulFunctionCall","src":"4773:74:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4767:2:3"},"nodeType":"YulFunctionCall","src":"4767:81:3"},"nodeType":"YulIf","src":"4764:107:3"},{"nodeType":"YulAssignment","src":"4881:16:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4892:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"4895:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:3"},"nodeType":"YulFunctionCall","src":"4888:9:3"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4881:3:3"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4629:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"4632:1:3","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4638:3:3","type":""}],"src":"4598:305:3"},{"body":{"nodeType":"YulBlock","src":"5063:288:3","statements":[{"nodeType":"YulAssignment","src":"5073:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5085:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5096:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5081:3:3"},"nodeType":"YulFunctionCall","src":"5081:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5073:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5153:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5177:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5162:3:3"},"nodeType":"YulFunctionCall","src":"5162:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5109:43:3"},"nodeType":"YulFunctionCall","src":"5109:71:3"},"nodeType":"YulExpressionStatement","src":"5109:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5234:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5247:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5258:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5243:3:3"},"nodeType":"YulFunctionCall","src":"5243:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5190:43:3"},"nodeType":"YulFunctionCall","src":"5190:72:3"},"nodeType":"YulExpressionStatement","src":"5190:72:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5316:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5329:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5340:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5325:3:3"},"nodeType":"YulFunctionCall","src":"5325:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5272:43:3"},"nodeType":"YulFunctionCall","src":"5272:72:3"},"nodeType":"YulExpressionStatement","src":"5272:72:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5019:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5039:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5047:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5058:4:3","type":""}],"src":"4909:442:3"},{"body":{"nodeType":"YulBlock","src":"5399:48:3","statements":[{"nodeType":"YulAssignment","src":"5409:32:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5434:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5427:6:3"},"nodeType":"YulFunctionCall","src":"5427:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5420:6:3"},"nodeType":"YulFunctionCall","src":"5420:21:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5409:7:3"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5381:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5391:7:3","type":""}],"src":"5357:90:3"},{"body":{"nodeType":"YulBlock","src":"5493:76:3","statements":[{"body":{"nodeType":"YulBlock","src":"5547:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5556:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5559:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5549:6:3"},"nodeType":"YulFunctionCall","src":"5549:12:3"},"nodeType":"YulExpressionStatement","src":"5549:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5516:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5538:5:3"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5523:14:3"},"nodeType":"YulFunctionCall","src":"5523:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5513:2:3"},"nodeType":"YulFunctionCall","src":"5513:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5506:6:3"},"nodeType":"YulFunctionCall","src":"5506:40:3"},"nodeType":"YulIf","src":"5503:60:3"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5486:5:3","type":""}],"src":"5453:116:3"},{"body":{"nodeType":"YulBlock","src":"5635:77:3","statements":[{"nodeType":"YulAssignment","src":"5645:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5660:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5654:5:3"},"nodeType":"YulFunctionCall","src":"5654:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5645:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5700:5:3"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5676:23:3"},"nodeType":"YulFunctionCall","src":"5676:30:3"},"nodeType":"YulExpressionStatement","src":"5676:30:3"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5613:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"5621:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5629:5:3","type":""}],"src":"5575:137:3"},{"body":{"nodeType":"YulBlock","src":"5792:271:3","statements":[{"body":{"nodeType":"YulBlock","src":"5838:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5840:77:3"},"nodeType":"YulFunctionCall","src":"5840:79:3"},"nodeType":"YulExpressionStatement","src":"5840:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5813:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5822:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5809:3:3"},"nodeType":"YulFunctionCall","src":"5809:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"5834:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5805:3:3"},"nodeType":"YulFunctionCall","src":"5805:32:3"},"nodeType":"YulIf","src":"5802:119:3"},{"nodeType":"YulBlock","src":"5931:125:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5946:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5960:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5950:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5975:71:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6018:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"6029:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6014:3:3"},"nodeType":"YulFunctionCall","src":"6014:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6038:7:3"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"5985:28:3"},"nodeType":"YulFunctionCall","src":"5985:61:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5975:6:3"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5762:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5773:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5785:6:3","type":""}],"src":"5718:345:3"},{"body":{"nodeType":"YulBlock","src":"6195:206:3","statements":[{"nodeType":"YulAssignment","src":"6205:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6217:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6228:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6213:3:3"},"nodeType":"YulFunctionCall","src":"6213:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6205:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6285:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6298:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6309:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6294:3:3"},"nodeType":"YulFunctionCall","src":"6294:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6241:43:3"},"nodeType":"YulFunctionCall","src":"6241:71:3"},"nodeType":"YulExpressionStatement","src":"6241:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6366:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6379:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6390:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6375:3:3"},"nodeType":"YulFunctionCall","src":"6375:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6322:43:3"},"nodeType":"YulFunctionCall","src":"6322:72:3"},"nodeType":"YulExpressionStatement","src":"6322:72:3"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6159:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6171:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6179:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6190:4:3","type":""}],"src":"6069:332:3"},{"body":{"nodeType":"YulBlock","src":"6503:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6520:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"6525:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6513:6:3"},"nodeType":"YulFunctionCall","src":"6513:19:3"},"nodeType":"YulExpressionStatement","src":"6513:19:3"},{"nodeType":"YulAssignment","src":"6541:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6560:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6565:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6556:3:3"},"nodeType":"YulFunctionCall","src":"6556:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6541:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6475:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"6480:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6491:11:3","type":""}],"src":"6407:169:3"},{"body":{"nodeType":"YulBlock","src":"6688:75:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6710:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6718:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6706:3:3"},"nodeType":"YulFunctionCall","src":"6706:14:3"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6722:33:3","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:3"},"nodeType":"YulFunctionCall","src":"6699:57:3"},"nodeType":"YulExpressionStatement","src":"6699:57:3"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6680:6:3","type":""}],"src":"6582:181:3"},{"body":{"nodeType":"YulBlock","src":"6915:220:3","statements":[{"nodeType":"YulAssignment","src":"6925:74:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6991:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"6996:2:3","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6932:58:3"},"nodeType":"YulFunctionCall","src":"6932:67:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6925:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7097:3:3"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"7008:88:3"},"nodeType":"YulFunctionCall","src":"7008:93:3"},"nodeType":"YulExpressionStatement","src":"7008:93:3"},{"nodeType":"YulAssignment","src":"7110:19:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"7126:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7117:3:3"},"nodeType":"YulFunctionCall","src":"7117:12:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7110:3:3"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6903:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6911:3:3","type":""}],"src":"6769:366:3"},{"body":{"nodeType":"YulBlock","src":"7312:248:3","statements":[{"nodeType":"YulAssignment","src":"7322:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7334:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7345:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7330:3:3"},"nodeType":"YulFunctionCall","src":"7330:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7322:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7369:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7380:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7365:3:3"},"nodeType":"YulFunctionCall","src":"7365:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7388:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7394:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7384:3:3"},"nodeType":"YulFunctionCall","src":"7384:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7358:6:3"},"nodeType":"YulFunctionCall","src":"7358:47:3"},"nodeType":"YulExpressionStatement","src":"7358:47:3"},{"nodeType":"YulAssignment","src":"7414:139:3","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7548:4:3"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7422:124:3"},"nodeType":"YulFunctionCall","src":"7422:131:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7414:4:3"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7292:9:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7307:4:3","type":""}],"src":"7141:419:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$131_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$131_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$131__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$131_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"142":[{"length":32,"start":1136},{"length":32,"start":2510},{"length":32,"start":2863}],"145":[{"length":32,"start":1779},{"length":32,"start":3099}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ce5760003560e01c80636a74a0fc1161008c578063bea0815111610066578063bea08151146101ff578063cd3daf9d1461022f578063e39782401461024d578063f1e9f1e51461026b576100ce565b80636a74a0fc14610193578063ab32eb69146101b1578063be5af966146101e1576100ce565b80628cc262146100d357806321e82efa14610103578063227a473b14610133578063304ac91b1461014f5780633158952e1461016d5780635b6b431d14610177575b600080fd5b6100ed60048036038101906100e89190610cfa565b610289565b6040516100fa9190610d40565b60405180910390f35b61011d60048036038101906101189190610cfa565b6103a2565b60405161012a9190610d40565b60405180910390f35b61014d60048036038101906101489190610d87565b6103ba565b005b6101576105b0565b6040516101649190610d40565b60405180910390f35b6101756105b6565b005b610191600480360381019061018c9190610d87565b610832565b005b61019b610b0f565b6040516101a89190610d40565b60405180910390f35b6101cb60048036038101906101c69190610cfa565b610b15565b6040516101d89190610d40565b60405180910390f35b6101e9610b2d565b6040516101f69190610e13565b60405180910390f35b61021960048036038101906102149190610cfa565b610b51565b6040516102269190610d40565b60405180910390f35b610237610b69565b6040516102449190610d40565b60405180910390f35b610255610bf3565b6040516102629190610e3d565b60405180910390f35b610273610c19565b6040516102809190610e13565b60405180910390f35b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006102d8610b69565b90506000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080670de0b6b3a764000083856103789190610e87565b866103839190610ebb565b61038d9190610f44565b6103979190610f75565b945050505050919050565b60076020528060005260406000206000915090505481565b6103c2610c3d565b60008114156103fd576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003600082825461040f9190610f75565b9250508190555080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104659190610f75565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104cb93929190610fcb565b602060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d919061103a565b905080610556576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9eddc895a7fcc0f3c43a5ec13c076918147735dc833efd2b36be61b49960ae288360405161059c9190610d40565b60405180910390a2506105ad610c8d565b50565b60045481565b6105be610c3d565b336105c7610b69565b600481905550426002819055506105dd81610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161074c929190611067565b602060405180830381600087803b15801561076657600080fd5b505af115801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e919061103a565b9050806107d7576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f8ef124458f6feaffa36635fcaa512e69bb8539878544e2fad3115da59145b4fc8360405161081d9190610d40565b60405180910390a2505050610830610c8d565b565b61083a610c3d565b33610843610b69565b6004819055504260028190555061085981610289565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600454600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482101561095b576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816003600082825461096d9190610e87565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109c39190610e87565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b8152600401610a2993929190610fcb565b602060405180830381600087803b158015610a4357600080fd5b505af1158015610a57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7b919061103a565b905080610ab4576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f601cfd9096521c3ad4102493abe73cd7278ce7b82d41f1d65e1c25c1fb56197884604051610afa9190610d40565b60405180910390a25050610b0c610c8d565b50565b60035481565b60056020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b6000806003541415610ba7576040517f90914fd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600354670de0b6b3a7640000606460025442610bc39190610e87565b610bcd9190610ebb565b610bd79190610ebb565b610be19190610f44565b600454610bee9190610f75565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000541415610c83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7a906110ed565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc782610c9c565b9050919050565b610cd781610cbc565b8114610ce257600080fd5b50565b600081359050610cf481610cce565b92915050565b600060208284031215610d1057610d0f610c97565b5b6000610d1e84828501610ce5565b91505092915050565b6000819050919050565b610d3a81610d27565b82525050565b6000602082019050610d556000830184610d31565b92915050565b610d6481610d27565b8114610d6f57600080fd5b50565b600081359050610d8181610d5b565b92915050565b600060208284031215610d9d57610d9c610c97565b5b6000610dab84828501610d72565b91505092915050565b6000819050919050565b6000610dd9610dd4610dcf84610c9c565b610db4565b610c9c565b9050919050565b6000610deb82610dbe565b9050919050565b6000610dfd82610de0565b9050919050565b610e0d81610df2565b82525050565b6000602082019050610e286000830184610e04565b92915050565b610e3781610cbc565b82525050565b6000602082019050610e526000830184610e2e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9282610d27565b9150610e9d83610d27565b925082821015610eb057610eaf610e58565b5b828203905092915050565b6000610ec682610d27565b9150610ed183610d27565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0a57610f09610e58565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f4f82610d27565b9150610f5a83610d27565b925082610f6a57610f69610f15565b5b828204905092915050565b6000610f8082610d27565b9150610f8b83610d27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fc057610fbf610e58565b5b828201905092915050565b6000606082019050610fe06000830186610e2e565b610fed6020830185610e2e565b610ffa6040830184610d31565b949350505050565b60008115159050919050565b61101781611002565b811461102257600080fd5b50565b6000815190506110348161100e565b92915050565b6000602082840312156110505761104f610c97565b5b600061105e84828501611025565b91505092915050565b600060408201905061107c6000830185610e2e565b6110896020830184610d31565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006110d7601f83611090565b91506110e2826110a1565b602082019050919050565b60006020820190508181036000830152611106816110ca565b905091905056fea26469706673582212204b9aa5cf9795c9c2ee469840866f6e9ce696ce3cc8ece3e12ec5c96bed4f3ac064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A74A0FC GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE3978240 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF1E9F1E5 EQ PUSH2 0x26B JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x6A74A0FC EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xBE5AF966 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x21E82EFA EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x227A473B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x304AC91B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x3158952E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x5B6B431D EQ PUSH2 0x177 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x5B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19B PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x2D8 PUSH2 0xB69 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 DUP6 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST DUP7 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0x38D SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C2 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x465 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9EDDC895A7FCC0F3C43A5EC13C076918147735DC833EFD2B36BE61B49960AE28 DUP4 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x5AD PUSH2 0xC8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5BE PUSH2 0xC3D JUMP JUMPDEST CALLER PUSH2 0x5C7 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x5DD DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP3 SWAP2 SWAP1 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EF124458F6FEAFFA36635FCAA512E69BB8539878544E2FAD3115DA59145B4FC DUP4 PUSH1 0x40 MLOAD PUSH2 0x81D SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x830 PUSH2 0xC8D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x83A PUSH2 0xC3D JUMP JUMPDEST CALLER PUSH2 0x843 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x859 DUP2 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 LT ISZERO PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x96D SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA57 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x601CFD9096521C3AD4102493ABE73CD7278CE7B82D41F1D65E1C25C1FB561978 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAFA SWAP2 SWAP1 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xB0C PUSH2 0xC8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90914FD500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x64 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xBC3 SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xBD7 SWAP2 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0xF44 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xBEE SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7A SWAP1 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP3 PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF4 DUP2 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD10 JUMPI PUSH2 0xD0F PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP5 DUP3 DUP6 ADD PUSH2 0xCE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3A DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD64 DUP2 PUSH2 0xD27 JUMP JUMPDEST DUP2 EQ PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD81 DUP2 PUSH2 0xD5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDAB DUP5 DUP3 DUP6 ADD PUSH2 0xD72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD9 PUSH2 0xDD4 PUSH2 0xDCF DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEB DUP3 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFD DUP3 PUSH2 0xDE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0xDF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE28 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE37 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9D DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC6 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xED1 DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF4F DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xF5A DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0xF15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF80 DUP3 PUSH2 0xD27 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8B DUP4 PUSH2 0xD27 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xFBF PUSH2 0xE58 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFE0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xFED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0xFFA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0x1002 JUMP JUMPDEST DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xC97 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP5 DUP3 DUP6 ADD PUSH2 0x1025 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x107C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x1089 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD31 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D7 PUSH1 0x1F DUP4 PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP PUSH2 0x10E2 DUP3 PUSH2 0x10A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1106 DUP2 PUSH2 0x10CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SWAP11 0xA5 0xCF SWAP8 SWAP6 0xC9 0xC2 0xEE CHAINID SWAP9 BLOCKHASH DUP7 PUSH16 0x6E9CE696CE3CC8ECE3E12EC5C96BED4F GASPRICE 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"221:3776:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2351:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;529:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3640:354;;;:::i;:::-;;3002:476;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;292:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;626:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1456:268;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;335:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1732:386;1786:7;1805:19;1827:10;:19;1838:7;1827:19;;;;;;;;;;;;;;;;1805:41;;1857:19;1879:16;:14;:16::i;:::-;1857:38;;1906:30;1939:20;:29;1960:7;1939:29;;;;;;;;;;;;;;;;1906:62;;1979:15;1998:9;:18;2008:7;1998:18;;;;;;;;;;;;;;;;1979:37;;2101:7;2093:4;2067:22;2053:11;:36;;;;:::i;:::-;2038:11;:52;;;;:::i;:::-;2037:60;;;;:::i;:::-;2036:72;;;;:::i;:::-;2029:79;;;;;;1732:386;;;:::o;678:56::-;;;;;;;;;;;;;;;;;:::o;2351:431::-;2261:21:0;:19;:21::i;:::-;2430:1:2::1;2419:7;:12;2416:67;;;2454:17;;;;;;;;;;;;;;2416:67;2510:7;2493:13;;:24;;;;;;;:::i;:::-;;;;;;;;2554:7;2528:10;:22;2539:10;2528:22;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2574:12;2589;:25;;;2615:10;2635:4;2642:7;2589:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2574:76;;2665:7;2661:63;;2695:17;;;;;;;;;;;;;;2661:63;2761:10;2739:33;;;2752:7;2739:33;;;;;;:::i;:::-;;;;;;;;2405:377;2303:20:0::0;:18;:20::i;:::-;2351:431:2;:::o;529:37::-;;;;:::o;3640:354::-;2261:21:0;:19;:21::i;:::-;3692:10:2::1;1256:16;:14;:16::i;:::-;1231:22;:41;;;;1301:15;1283;:33;;;;1348:15;1355:7;1348:6;:15::i;:::-;1327:9;:18;1337:7;1327:18;;;;;;;;;;;;;;;:36;;;;1406:22;;1374:20;:29;1395:7;1374:29;;;;;;;;;;;;;;;:54;;;;3715:14:::2;3732:9;:21;3742:10;3732:21;;;;;;;;;;;;;;;;3715:38;;3788:1;3764:9;:21;3774:10;3764:21;;;;;;;;;;;;;;;:25;;;;3800:12;3815:11;:20;;;3836:10;3848:6;3815:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3800:55;;3870:7;3866:63;;3900:17;;;;;;;;;;;;;;3866:63;3965:10;3946:30;;;3957:6;3946:30;;;;;;:::i;:::-;;;;;;;;3704:290;;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;3640:354:2:o;3002:476::-;2261:21:0;:19;:21::i;:::-;3069:10:2::1;1256:16;:14;:16::i;:::-;1231:22;:41;;;;1301:15;1283;:33;;;;1348:15;1355:7;1348:6;:15::i;:::-;1327:9;:18;1337:7;1327:18;;;;;;;;;;;;;;;:36;;;;1406:22;;1374:20;:29;1395:7;1374:29;;;;;;;;;;;;;;;:54;;;;3104:10:::2;:22;3115:10;3104:22;;;;;;;;;;;;;;;;3094:7;:32;3091:87;;;3149:17;;;;;;;;;;;;;;3091:87;3205:7;3188:13;;:24;;;;;;;:::i;:::-;;;;;;;;3249:7;3223:10;:22;3234:10;3223:22;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;3267:12;3282;:25;;;3316:4;3323:10;3335:7;3282:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:76;;3360:7;3356:63;;3390:17;;;;;;;;;;;;;;3356:63;3459:10;3436:34;;;3450:7;3436:34;;;;;;:::i;:::-;;;;;;;;3080:398;2292:1:0::1;2303:20:::0;:18;:20::i;:::-;3002:476:2;:::o;494:28::-;;;;:::o;573:46::-;;;;;;;;;;;;;;;;;:::o;292:36::-;;;:::o;626:45::-;;;;;;;;;;;;;;;;;:::o;1456:268::-;1503:7;1542:1;1525:13;;:18;1522:73;;;1566:17;;;;;;;;;;;;;;1522:73;1702:13;;1693:4;446:3;1659:15;;1641;:33;;;;:::i;:::-;1639:51;;;;:::i;:::-;:58;;;;:::i;:::-;1638:77;;;;:::i;:::-;1612:22;;:104;;;;:::i;:::-;1605:111;;1456:268;:::o;377:22::-;;;;;;;;;;;;;:::o;335:35::-;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:180::-;3532:77;3529:1;3522:88;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3670:191;3710:4;3730:20;3748:1;3730:20;:::i;:::-;3725:25;;3764:20;3782:1;3764:20;:::i;:::-;3759:25;;3803:1;3800;3797:8;3794:34;;;3808:18;;:::i;:::-;3794:34;3853:1;3850;3846:9;3838:17;;3670:191;;;;:::o;3867:348::-;3907:7;3930:20;3948:1;3930:20;:::i;:::-;3925:25;;3964:20;3982:1;3964:20;:::i;:::-;3959:25;;4152:1;4084:66;4080:74;4077:1;4074:81;4069:1;4062:9;4055:17;4051:105;4048:131;;;4159:18;;:::i;:::-;4048:131;4207:1;4204;4200:9;4189:20;;3867:348;;;;:::o;4221:180::-;4269:77;4266:1;4259:88;4366:4;4363:1;4356:15;4390:4;4387:1;4380:15;4407:185;4447:1;4464:20;4482:1;4464:20;:::i;:::-;4459:25;;4498:20;4516:1;4498:20;:::i;:::-;4493:25;;4537:1;4527:35;;4542:18;;:::i;:::-;4527:35;4584:1;4581;4577:9;4572:14;;4407:185;;;;:::o;4598:305::-;4638:3;4657:20;4675:1;4657:20;:::i;:::-;4652:25;;4691:20;4709:1;4691:20;:::i;:::-;4686:25;;4845:1;4777:66;4773:74;4770:1;4767:81;4764:107;;;4851:18;;:::i;:::-;4764:107;4895:1;4892;4888:9;4881:16;;4598:305;;;;:::o;4909:442::-;5058:4;5096:2;5085:9;5081:18;5073:26;;5109:71;5177:1;5166:9;5162:17;5153:6;5109:71;:::i;:::-;5190:72;5258:2;5247:9;5243:18;5234:6;5190:72;:::i;:::-;5272;5340:2;5329:9;5325:18;5316:6;5272:72;:::i;:::-;4909:442;;;;;;:::o;5357:90::-;5391:7;5434:5;5427:13;5420:21;5409:32;;5357:90;;;:::o;5453:116::-;5523:21;5538:5;5523:21;:::i;:::-;5516:5;5513:32;5503:60;;5559:1;5556;5549:12;5503:60;5453:116;:::o;5575:137::-;5629:5;5660:6;5654:13;5645:22;;5676:30;5700:5;5676:30;:::i;:::-;5575:137;;;;:::o;5718:345::-;5785:6;5834:2;5822:9;5813:7;5809:23;5805:32;5802:119;;;5840:79;;:::i;:::-;5802:119;5960:1;5985:61;6038:7;6029:6;6018:9;6014:22;5985:61;:::i;:::-;5975:71;;5931:125;5718:345;;;;:::o;6069:332::-;6190:4;6228:2;6217:9;6213:18;6205:26;;6241:71;6309:1;6298:9;6294:17;6285:6;6241:71;:::i;:::-;6322:72;6390:2;6379:9;6375:18;6366:6;6322:72;:::i;:::-;6069:332;;;;;:::o;6407:169::-;6491:11;6525:6;6520:3;6513:19;6565:4;6560:3;6556:14;6541:29;;6407:169;;;;:::o;6582:181::-;6722:33;6718:1;6710:6;6706:14;6699:57;6582:181;:::o;6769:366::-;6911:3;6932:67;6996:2;6991:3;6932:67;:::i;:::-;6925:74;;7008:93;7097:3;7008:93;:::i;:::-;7126:2;7121:3;7117:12;7110:19;;6769:366;;;:::o;7141:419::-;7307:4;7345:2;7334:9;7330:18;7322:26;;7394:9;7388:4;7384:20;7380:1;7369:9;7365:17;7358:47;7422:131;7548:4;7422:131;:::i;:::-;7414:139;;7141:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"883800","executionCost":"infinite","totalCost":"infinite"},"external":{"Claim()":"infinite","RewardToken()":"infinite","Stake(uint256)":"infinite","StakingToken()":"infinite","Withdraw(uint256)":"infinite","earned(address)":"infinite","rewardPerToken()":"infinite","s_balances(address)":"2859","s_owner()":"2580","s_rewardPerTokenStored()":"2496","s_rewards(address)":"2836","s_totalSupply()":"2452","s_userRewardPerToken(address)":"2837"}},"methodIdentifiers":{"Claim()":"3158952e","RewardToken()":"f1e9f1e5","Stake(uint256)":"227a473b","StakingToken()":"be5af966","Withdraw(uint256)":"5b6b431d","earned(address)":"008cc262","rewardPerToken()":"cd3daf9d","s_balances(address)":"ab32eb69","s_owner()":"e3978240","s_rewardPerTokenStored()":"304ac91b","s_rewards(address)":"bea08151","s_totalSupply()":"6a74a0fc","s_userRewardPerToken(address)":"21e82efa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingaddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardaddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Transfer_Failed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ClaimEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"StakingEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// //SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\nerror Transfer_Failed();\\r\\n\\r\\ncontract Staking is ReentrancyGuard{\\r\\n    // @dev State Variables\\r\\n    IERC20 immutable public StakingToken;\\r\\n    IERC20 immutable public RewardToken;\\r\\n    address public s_owner;\\r\\n    uint256 private constant s_rewardRate = 100;\\r\\n    uint256 private lastUpdatedtime;\\r\\n    uint256 public s_totalSupply;\\r\\n    uint256 public s_rewardPerTokenStored;\\r\\n    mapping (address => uint256) public s_balances;\\r\\n    mapping (address => uint256) public s_rewards;\\r\\n    mapping (address => uint256) public s_userRewardPerToken;\\r\\n\\r\\n    // @dev Events\\r\\n    event StakingEvent(uint256 _amount, address indexed user);\\r\\n    event WithdrawEvent(uint256 _amount, address indexed user);\\r\\n    event ClaimEvent(uint256 amount, address indexed user);\\r\\n\\r\\n    constructor(address _stakingaddress, address _rewardaddress){\\r\\n        StakingToken = IERC20(_stakingaddress);\\r\\n        RewardToken = IERC20(_rewardaddress);\\r\\n        s_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    //  @dev modifier\\r\\n    modifier UpdateReward(address account) {\\r\\n        s_rewardPerTokenStored = rewardPerToken();\\r\\n        lastUpdatedtime = block.timestamp;\\r\\n        s_rewards[account] = earned(account);\\r\\n        s_userRewardPerToken[account] = s_rewardPerTokenStored;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function rewardPerToken() public view returns (uint256){\\r\\n        if(s_totalSupply == 0){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n        return s_rewardPerTokenStored + ((( block.timestamp - lastUpdatedtime) * s_rewardRate * 1e18 ) / s_totalSupply);\\r\\n    }\\r\\n\\r\\n    function earned(address account) public view returns (uint256){\\r\\n        uint256 userBalance = s_balances[account];\\r\\n        uint256 rewardToken = rewardPerToken();\\r\\n        uint256 userRewardPerTokenPaid = s_userRewardPerToken[account];\\r\\n        uint256 rewards =  s_rewards[account];\\r\\n\\r\\n        return ((userBalance * (rewardToken - userRewardPerTokenPaid))/ 1e18) + rewards;\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    // @dev Stake Function\\r\\n    // Function shoud be able to add to total supply\\r\\n    // Add to the user balance\\r\\n    // transfer to the contract\\r\\n    // Emit the amount staked and the address\\r\\n// UpdateReward(msg.sender)\\r\\n    function Stake(uint256 _amount) external nonReentrant {\\r\\n        if(_amount == 0){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n        s_totalSupply += _amount;\\r\\n        s_balances[msg.sender] += _amount;\\r\\n\\r\\n        bool success = StakingToken.transferFrom(msg.sender, address(this), _amount);\\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n        emit StakingEvent(_amount, msg.sender);\\r\\n\\r\\n    }\\r\\n\\r\\n    // @dev Withdraw Function\\r\\n    // Function should be able to minus from the total supply\\r\\n    // Minus from the user balance\\r\\n    // transfer to the user\\r\\n    // Emit the amount withdrawed and the address\\r\\n\\r\\n    function Withdraw(uint _amount) external nonReentrant UpdateReward(msg.sender){\\r\\n        if(_amount < s_balances[msg.sender]){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n        s_totalSupply -= _amount;\\r\\n        s_balances[msg.sender] -= _amount;\\r\\n        bool success = StakingToken.transferFrom(address(this), msg.sender, _amount);\\r\\n\\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n\\r\\n        emit WithdrawEvent(_amount, msg.sender);\\r\\n    }\\r\\n\\r\\n\\r\\n    // @dev Claim Function\\r\\n    // user reward will go to zero\\r\\n    // transfer the reward to the user\\r\\n    // Emit the amount token and the address\\r\\n\\r\\n    function Claim() external nonReentrant UpdateReward(msg.sender) {\\r\\n        uint256 amount = s_rewards[msg.sender];\\r\\n        s_rewards[msg.sender] = 0;\\r\\n        bool success = RewardToken.transfer(msg.sender, amount);\\r\\n        if(!success){\\r\\n            revert Transfer_Failed();\\r\\n        }\\r\\n\\r\\n        emit ClaimEvent(amount, msg.sender);\\r\\n        \\r\\n    }\\r\\n}\",\"keccak256\":\"0xa7c804316aea723860585f0706ab492cec47cd79be207e6d9f833e411cf26777\",\"license\":\"UNLICENSED\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/Staking.sol:Staking","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":147,"contract":"contracts/Staking.sol:Staking","label":"s_owner","offset":0,"slot":"1","type":"t_address"},{"astId":152,"contract":"contracts/Staking.sol:Staking","label":"lastUpdatedtime","offset":0,"slot":"2","type":"t_uint256"},{"astId":154,"contract":"contracts/Staking.sol:Staking","label":"s_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":156,"contract":"contracts/Staking.sol:Staking","label":"s_rewardPerTokenStored","offset":0,"slot":"4","type":"t_uint256"},{"astId":160,"contract":"contracts/Staking.sol:Staking","label":"s_balances","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":164,"contract":"contracts/Staking.sol:Staking","label":"s_rewards","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":168,"contract":"contracts/Staking.sol:Staking","label":"s_userRewardPerToken","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}